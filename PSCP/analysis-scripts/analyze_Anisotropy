#!/bin/bash

# BASH SCRIPT TO AUTOMATICALLY ANALYZE ANISOTROPY OVER A GIVEN RANGE 
# By: Eric Dybeck 01/12/2017
# param C - Charges (supplied as a list in quotation marks separated by spaces)
# param n - polymorph number (all 3 will be used if none is given)
# param M - Molecule name
# param T - Temperature(s) in K
# param P - Pressure in bar
# param N - Number of molecules
# param I - Number of independent molecules (the remainder will be averaged)
# param e - Number of steps in the equilibration step
# param p - Number of steps in the production step
# param i - Integrator
# param t - Thermostat
# param b - Barostat
# param a - number of cores (threads) to run on
# param r - vdw/coulomb cutoff distance (in angstroms)
# param u - potential to be used in the simulation
# param z - specify which simulation package we will use (gromacs or tinker)
# param h - optional string hinge to add to the job
# param E - specify the Thermodynamic Ensemble that will be used
# param o - number of production outputs

#=============================================================================================
# SETUP DEFAULT VALUES AND READ IN PARAMETERS FROM USER
#=============================================================================================

SETRUN_ARGS="$@"
#Charges="0.0500 0.1150 0.1500 0.2000 0.2500"
#Charges="0.0550 0.0700 0.0850 0.1000 0.1150 0.1300 0.1450 0.1600 0.1750 0.1900" 
Charge="0.1150"
polymorph_num="p1 p2 p3"
#TEMPERATURES="1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 310 320 330 340 350 360 370 380 390 400"
TEMPERATURES="30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400" #410 420 430 440 450"
#TEMPERATURES="310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 550 600"
PRESSURE=1
MOLECULE="benzene"
MOLECULES=72
INDEPENDENT="same"
equil_steps=1000000
prod_steps=10000000
PRODOUTPUTS=1000
integrator="sd"
thermostat="nose-hoover"
barostat="Parrinello-Rahman"
cores=7
k_max=1000
Lambda=0
CUTOFF="8"
POTENTIAL="oplsaa"
SIMULATION="gromacs"
hinge="DefaultHinge"
ENSEMBLE="NPT"
export TEMPLATEPATH="../runfiles"

#options passed in from the users
while getopts "c:n:M:C:H:T:P:N:I:e:p:i:t:b:a:k:r:u:z:h:E:o:" opt; do
        case $opt in
	C )
                Charge=$OPTARG
                ;;
        n )
                polymorph_num=$OPTARG
                ;;
      	M )
                MOLECULE=$OPTARG
                ;; 
	T )
		TEMPERATURES=$OPTARG
		;;
        P )
                PRESSURE=$OPTARG
                ;;
        N )
                MOLECULES=$OPTARG
                ;;
	I )
                INDEPENDENT=$OPTARG
                ;;
        e )
                equil_steps=$OPTARG
                ;;
        p )
                prod_steps=$OPTARG
                ;;
        i )
                integrator=$OPTARG
                ;;
        t )
                thermostat=$OPTARG
                ;;
        b )
                barostat=$OPTARG
                ;;
	a )
                cores=$OPTARG
                ;;
	E )
                ENSEMBLE=$OPTARG
                ;;
	k )
                k_max=$OPTARG
                ;;
	r )
                CUTOFF=$OPTARG
                ;;
	u )
                POTENTIAL=$OPTARG
                ;;
	z )
                SIMULATION=$OPTARG
                ;;	
        h )
                hinge=$OPTARG
                ;;
	o )
                PRODOUTPUTS=$OPTARG
		;;
        esac
done

#=============================================================================================
# ENSURE THAT INPUTS HAVE BEEN PROPERLY ENTERED
#=============================================================================================

#INDEPENDENT MOLECULES
if [ "$INDEPENDENT" == "same" ] || [ "$INDEPENDENT" == "$MOLECULES" ]; then
    INDEPENDENT=$MOLECULES
    independenthinge="$MOLECULES"
else
    independenthinge="${INDEPENDENT}ind"
fi

#NUMBER OF EQUILIBRATION TIMESTEPS
#if [ N != 256 ]
#        echo "Unsupported number of molecules: $MOLECULES"
#        exit 1
#fi

#NUMBER OF PRODUCTION TIMESTEPS
#if [ MOLECULES != 256 ]
#        echo "Unsupported number of molecules: $MOLECULES"
#        exit 1
#fi

#INTEGRATOR
if [ "$integrator" != "md" ] && [ "$integrator" != "md-vv" ] && [ "$integrator" != "sd" ]; then
	echo "Unrecognized integrator: $integrator"
        exit 1
fi

#SPRING CONSTANT
if [ $k_max -lt 0 ]; then
        echo "Invalid spring constant: $k_max"
        exit 1
fi

#CUTOFF RADIUS
if [ "$CUTOFF" -lt "0" ]; then
        echo "Invalid Cutoff Radius: $CUTOFF"
        exit 1
fi

#POTENTIAL
potentiallist=("oplsaa gromos designedg oplsaatodesignedg designeda oplsaatodesigneda day amoeba09 drude")
valid="false"
for pot in $potentiallist; do
    if [ "$POTENTIAL" == "$pot" ]; then
        valid="true"
    fi
done
if [ "$valid" == "false" ]; then
        echo "Unsupported potential: $POTENTIAL"
        echo "Supported potentials: $potentiallist"
        exit 1
fi
if [ "$POTENTIAL" == "oplsaa" ]; then
	PotNAME="OPLS"
fi

#ENSEMBLE
if [ "$ENSEMBLE" != "NVE" ] && [ "$ENSEMBLE" != "NVT" ] && [ "$ENSEMBLE" != "NPT" ]; then
        echo "Invalid Thermodynamic Ensemble: $ENSEMBLE"
        echo "Supported Ensembles: NVE, NVT, NPT"
        exit 1
fi

#Format the number of molecules
if [ "$MOLECULES" == "$INDEPENDENT" ]; then
        export MOLNUM="$MOLECULES"
else
        export MOLNUM="${MOLECULES}_${INDEPENDENT}ind"
fi

#HINGE
if [ "$hinge" == "DefaultHinge" ]; then
    hinge=""
else
    hinge="_${hinge}"
fi



#=============================================================================================
# GET THE REFERENCE LATTICE PARAMETER VALUES AT 0K
#=============================================================================================

#Loop through each polymorph
for poly in $polymorph_num; do

	#Create the file
	fnameData="${MOLECULE}_${poly}_Anisotropy.txt"
	rm $fnameData
	echo "#Temperature     A     B     C     Alpha  Beta  Gamma" >> $fnameData
	echo "=====================================================" >> $fnameData
	
	#Get the reference lattice parameter values at 0K
	fname0K="/home/ecd4bd/crystals/NMA/runfiles/${MOLECULE}_${poly}_${MOLECULES}_000K_${PotNAME}.pdb"
	line=$(sed '4q;d' $fname0K)
	Aref=$(echo $line | awk '{print $2}')
	Bref=$(echo $line | awk '{print $3}')
	Cref=$(echo $line | awk '{print $4}')
	Alpharef=$(echo $line | awk '{print $5}')
	Betaref=$(echo $line | awk '{print $6}')
	Gammaref=$(echo $line | awk '{print $7}')

	for temp in $TEMPERATURES; do

		#Format the temperature name
		if [ "$temp" -lt "10" ]; then
        		export TEMPNAME="00$temp"
		elif [ "$temp" -lt "100" ]; then
        		export TEMPNAME="0$temp"
		else
        		export TEMPNAME=$temp
		fi	

		#Get the lattice parameters for this temperature
		dirname="${MOLECULE}_GRO_${PotNAME}_${poly}_${MOLNUM}_${TEMPNAME}K_000L_100G_001P${hinge}"
		echo "Analyzing $dirname ..."
		line=$(sed '4q;d' ${dirname}/EQ.pdb)
        	A=$(echo $line | awk '{print $2}')
		A=$(echo "scale=3;${A}/${Aref}" | bc | sed -r 's/^(-?)\./\10./')
        	B=$(echo $line | awk '{print $3}')
		B=$(echo "scale=3;${B}/${Bref}" | bc | sed -r 's/^(-?)\./\10./')
        	C=$(echo $line | awk '{print $4}')
		C=$(echo "scale=3;${C}/${Cref}" | bc | sed -r 's/^(-?)\./\10./')
        	Alpha=$(echo $line | awk '{print $5}')
        	Beta=$(echo $line | awk '{print $6}')
        	Gamma=$(echo $line | awk '{print $7}')

		echo "$temp        $A       $B     $C     $Alpha   $Beta      $Gamma" >> $fnameData
	done
done

