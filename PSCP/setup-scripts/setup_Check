#!/bin/bash

#BASH SCRIPT TO AUTOMATICALLY SET UP BENZENE MD SIMULATIONS TO CHECK THE ENSEMBLE
#By: Eric Dybeck 03/31/2014
#param n - polymorph number (all 3 will be used if none is given)
#param T - Temperature in K
#param P - Pressure in bar
#param N - Number of benzene molecules
#param I - Number of independent benzene molecules (the remainder will be averaged)
#param e - Number of steps in the equilibration step
#param p - Number of steps in the production step
#param i - Integrator
#param t - Thermostat
#param b - Barostat
#param a - number of cores (threads) to run on
#param r - vdw/coulomb cutoff distance (in angstroms)
#param u - potential to be used in the simulation
#param z - specify which simulation package we will use (gromacs or tinker)
#param h - optional string hinge to add to the job
#param E - specify the Thermodynamic Ensemble that will be used
#param o - number of production outputs

#=============================================================================================
# SETUP DEFAULT VALUES AND READ IN PARAMETERS FROM USER
#=============================================================================================

SETRUN_ARGS="$@"
polymorph_num="p1 p2 p3"
TEMP=200
dT=10
PRESSURE=1
dP=500
MOLECULES=72
INDEPENDENT=4
equil_steps=100000
prod_steps=10000000
PRODOUTPUTS=2000
integrator="sd"
thermostat="nose-hoover"
barostat="Parrinello-Rahman"
cores=1
CUTOFF="8"
POTENTIAL="oplsaa"
simulation=gromacs
hinge="DefaultHinge"
ENSEMBLE="NPT"

#options passed in from the users
while getopts "C:n:T:P:N:I:e:p:i:t:b:a:k:r:u:z:h:E:o:" opt; do
        case $opt in
        n )
                polymorph_num=$OPTARG
                ;;
	T )
		TEMP=$OPTARG
		;;
        P )
                PRESSURE=$OPTARG
                ;;
        N )
                MOLECULES=$OPTARG
                ;;
	I )
                INDEPENDENT=$OPTARG
                ;;
        e )
                equil_steps=$OPTARG
                ;;
        p )
                prod_steps=$OPTARG
                ;;
        i )
                integrator=$OPTARG
                ;;
        t )
                thermostat=$OPTARG
                ;;
        b )
                barostat=$OPTARG
                ;;
	a )
                cores=$OPTARG
                ;;
	r )
                CUTOFF=$OPTARG
                ;;
	u )
                POTENTIAL=$OPTARG
                ;;
	z )
		simulation=$OPTARG
		;;
        h )
                hinge=$OPTARG
                ;;
	E )
                ENSEMBLE=$OPTARG
                ;;
	o )
                PRODOUTPUTS=$OPTARG
		;;
        esac
done

#=============================================================================================
# ENSURE THAT INPUTS HAVE BEEN PROPERLY ENTERED
#=============================================================================================

#TEMPERATURE
if [ $TEMP == -1 ]; then
	echo "Invalid Temperature: $Temp"
	exit 1
fi


#INTEGRATOR
if [ "$integrator" != "md" ] && [ "$integrator" != "md-vv" ] && [ "$integrator" != "sd" ]; then
        echo "Unrecognized integrator: $integrator"
        exit 1
fi

#SPRING CONSTANT
if [ $k_max -lt 0 ]; then
        echo "Invalid spring constant: $k_max"
        exit 1
fi

#CUTOFF RADIUS
if [ "$CUTOFF" -lt "0" ]; then
        echo "Invalid Cutoff Radius: $CUTOFF"
        exit 1
fi

#POTENTIAL
if [ "$POTENTIAL" != "oplsaa" ] && [ "$POTENTIAL" != "oplsaafakeg" ] && [ "$POTENTIAL" != "oplsaafakegb" ] && [ "$POTENTIAL" != "oplsaafakegd" ] && [ "$POTENTIAL" != "oplsaafakea" ] && [ "$POTENTIAL" != "gromos" ] && [ "$POTENTIAL" != "amoeba09"]; then
        echo "Invalid Potential: $POTENTIAL"
        echo "Supported Potentials: oplsaa oplsaafakeg oplsaafakegb oplsaafakegd oplsaafakea gromos amoeba09"
        exit 1
fi

#ENSEMBLE
if [ "$ENSEMBLE" != "NVE" ] && [ "$ENSEMBLE" != "NVT" ] && [ "$ENSEMBLE" != "NPT" ]; then
        echo "Invalid Thermodynamic Ensemble: $ENSEMBLE"
        echo "Supported Ensembles: NVE, NVT, NPT"
        exit 1
fi

#HINGE
if [ "$hinge" == "DefaultHinge" ]; then
    hinge="check${ENSEMBLE}"
else
    hinge="check${ENSEMBLE}_$hinge"
fi

#=============================================================================================
# SETUP CHECK ENSEMBLE JOBS
#=============================================================================================

#Setup high/low temperatures/pressures
let "TempCold=$TEMP"
let "TempHot=$TEMP+$dT"
let "PressureLow=$PRESSURE"
let "PressureHigh=$PRESSURE+$dP"
#Loop through all polymorphs
for poly in $polymorph_num; do
    #Create a check jobs for the high and low temperature
    #T=T P=P
    setup_molecule -n $poly -T $TempCold -P $PressureLow -N $MOLECULES -I $INDEPENDENT -e $equil_steps -p $prod_steps -E $ENSEMBLE -i $integrator -t $thermostat -b $barostat -a $cores -r $CUTOFF -u $POTENTIAL -z $simulation -h $hinge -o $PRODOUTPUTS

    if [ "$ENSEMBLE" == "NVT" ]; then

    #T=T+dT P=P
    setup_molecule -n $poly -T $TempHot -P $PressureLow -N $MOLECULES -I $INDEPENDENT -e $equil_steps -p $prod_steps -E $ENSEMBLE -i $integrator -t $thermostat -b $barostat -a $cores -r $CUTOFF -u $POTENTIAL -z $simulation -h $hinge -o $PRODOUTPUTS

    fi

    #If the ensemble is NPT, create jobs for both temperatures at a higher pressure
    if [ "$ENSEMBLE" == "NPT" ]; then
	#T=T P=P+dP
	#setup_molecule -n $poly -T $TempCold -P $PressureHigh -N $MOLECULES -I $INDEPENDENT -e $equil_steps -p $prod_steps -E $ENSEMBLE -i $integrator -t $thermostat -b $barostat -a $cores -r $CUTOFF -u $POTENTIAL -z $simulation -h $hinge -o $PRODOUTPUTS

	#T=T+dT P=P+dP
	setup_molecule -n $poly -T $TempHot -P $PressureHigh -N $MOLECULES -I $INDEPENDENT -e $equil_steps -p $prod_steps -E $ENSEMBLE -i $integrator -t $thermostat -b $barostat -a $cores -r $CUTOFF -u $POTENTIAL -z $simulation -h $hinge -o $PRODOUTPUTS
    fi
done
