#!/bin/bash

#BASH SCRIPT TO RESET JOBS TO THEIR PRE-RUN STATE
#param h - move jobs that contain this string
#param i - ignore jobs that contain this string
#param d - destination directory for the finished job

SETRUN_ARGS="$@"
hinge="DefaultHinge"
ignore_string="DefaultIgnore"
jobid=""

#options passed in from the users
while getopts "h:i:" opt; do
        case $opt in
        h )
                hinge=$OPTARG
                ;;
        i )
                ignore_string=$OPTARG
                ;;
	esac
done

#Check the status of jobs that contain the hinge but not the ignore string

#Check all jobs
if [ $hinge == "DefaultHinge" ] && [ $ignore_string == "DefaultIgnore" ]; then
	for direct in $(ls -l | egrep '^d' | awk '{print $9}'); do
		cd $direct
		echo "RESETTING: ${direct}"
		resetjob
		cd ..
	done
#Check all jobs containing the hinge
elif [ $ignore_string == "DefaultIgnore" ]; then
	for direct in $(ls -l | egrep '^d' | awk '{print $9}' | grep "$(echo $hinge | awk '{print $1}')" | grep "$(echo $hinge | awk '{print $2}')" | grep "$(echo $hinge | awk '{print $3}')"); do
		cd $direct
                echo "RESETTING: ${direct}"
                resetjob
                cd ..
	done
#Check all jobs except those containing the ignore string
elif [ $hinge == "DefaultHinge" ]; then
	for direct in $(ls -l | egrep '^d' | awk '{print $9}' | grep -v $ignore_string); do
                cd $direct
                echo "RESETTING: ${direct}"
                resetjob
                cd ..
	done
else
	for direct in $(ls -l | egrep '^d' | awk '{print $9}' | grep "$(echo $hinge | awk '{print $1}')" | grep "$(echo $hinge | awk '{print $2}')" | grep "$(echo $hinge | awk '{print $3}')" | grep -v $ignore_string); do
                cd $direct
                echo "RESETTING: ${direct}"
                resetjob
                cd ..
	done
fi
